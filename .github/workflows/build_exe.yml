name: Build GUI EXE

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read
  packages: write

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Update version.txt
        run: echo "${{ steps.get_version.outputs.VERSION }}" > version.txt

      - name: Build GUI EXE
        run: python scripts/build.py

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/
            README.md
            LICENSE
            version.txt
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
