name: 构建并发布GUI可执行文件

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  discussions: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: 安装依赖
        shell: pwsh
        run: |
          try {
            python -m pip install --upgrade pip
            pip install -r requirements.txt pyinstaller
            Write-Host "依赖安装成功"
          } catch {
            Write-Host "错误: 安装依赖失败 - $_"
            exit 1
          }

      - name: 准备构建环境
        shell: pwsh
        run: |
          try {
            Get-ChildItem -Recurse -Include *.py,*.txt,*.yml | ForEach-Object {
              $content = Get-Content $_.FullName -Raw
              [System.IO.File]::WriteAllText($_.FullName, $content, [System.Text.Encoding]::UTF8)
            }
            Write-Host "文件编码转换完成"
            
            if (Test-Path config.template.yml) {
              Copy-Item -Path config.template.yml -Destination config.yml -Force
              Write-Host "config.yml 创建成功"
            } else {
              Write-Host "警告: config.template.yml 不存在，将创建空的 config.yml"
              @'
            # 默认配置
            app_name: '掘金小册下载器'
            version: 1.0.0
            '@ | Out-File -FilePath config.yml -Encoding utf8
                        }
                      } catch {
                        Write-Host "错误: 准备构建环境失败 - $_"
                        exit 1
                      }

      - name: 更新版本文件
        shell: pwsh
        run: |
          try {
            $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
            Set-Content -Path version.txt -Value $version -Encoding UTF8
            Write-Host "版本文件更新成功: $version"
          } catch {
            Write-Host "错误: 更新版本文件失败 - $_"
            exit 1
          }

      - name: 构建GUI可执行文件
        shell: pwsh
        run: |
          try {
            $env:PYTHONIOENCODING = "utf-8"
            python scripts/build.py
            Write-Host "GUI可执行文件构建成功"
          } catch {
            Write-Host "错误: 构建GUI可执行文件失败 - $_"
            exit 1
          }

      - name: 生成更新日志
        id: changelog
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 创建发布
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.changelog.outputs.body }}
          files: |
            dist/
            README.md
            LICENSE
            version.txt
          name: 发布版本 ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
