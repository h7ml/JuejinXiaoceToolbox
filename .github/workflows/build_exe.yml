name: Build GUI EXE

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  discussions: write

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Update version.txt
        run: echo "${{ steps.get_version.outputs.VERSION }}" > version.txt

      - name: Build GUI EXE
        run: python scripts/build.py

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       dist/
      #       README.md
      #       LICENSE
      #       version.txt
      #     name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
      - name: 生成提交信息
        id: commit_message
        run: |
          echo "message=feat(release): 发布新版本 ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT

      - name: 提交更改
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "${{ steps.commit_message.outputs.message }}"

      - name: 部署到 release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            dist/
            README.md
            LICENSE
            version.txt
          name: 发布版本 ${{ steps.get_version.outputs.VERSION }}
          discussion_category_name: 公告
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
